(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{495:function(e,t,a){e.exports=a.p+"assets/img/error.d007cbad.png"},496:function(e,t,a){e.exports=a.p+"assets/img/rtc-1.c7c81813.png"},497:function(e,t,a){e.exports=a.p+"assets/img/sip.904350e6.png"},498:function(e,t,a){e.exports=a.p+"assets/img/snapshots.8c7042b6.jpg"},499:function(e,t,a){e.exports=a.p+"assets/img/watch-unlock.f243b1b0.png"},633:function(e,t,a){"use strict";a.r(t);var s=a(10),o=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"post-install-issues"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#post-install-issues"}},[e._v("#")]),e._v(" Post-Install Issues")]),e._v(" "),t("p",[e._v("Issues revolving around macOS once properly installed.")]),e._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#broken-imessage-and-siri"}},[e._v("Broken iMessage and Siri")])]),t("li",[t("a",{attrs:{href:"#no-on-board-audio"}},[e._v("No on-board audio")])]),t("li",[t("a",{attrs:{href:"#bios-reset-or-sent-into-safemode-after-reboot-shutdown"}},[e._v("BIOS reset or sent into Safemode after reboot/shutdown")])]),t("li",[t("a",{attrs:{href:"#synaptics-ps2-based-trackpad-doesn-t-work"}},[e._v("Synaptics PS2 based trackpad doesn't work")])]),t("li",[t("a",{attrs:{href:"#fix-for-dell-breakless-ps2-keyboard-keys"}},[e._v("Fix for Dell breakless PS2 keyboard keys")])]),t("li",[t("a",{attrs:{href:"#macos-gpu-acceleration-missing-on-amd-x570"}},[e._v("macOS GPU acceleration missing on AMD X570")])]),t("li",[t("a",{attrs:{href:"#drm-broken"}},[e._v("DRM Broken")])]),t("li",[t("a",{attrs:{href:"#memory-modules-misconfigured-on-macpro7-1"}},[e._v('"Memory Modules Misconfigured" on MacPro7,1')])]),t("li",[t("a",{attrs:{href:"#apps-crashing-on-amd"}},[e._v("Apps crashing on AMD")])]),t("li",[t("a",{attrs:{href:"#sleep-crashing-on-amd"}},[e._v("Sleep crashing on AMD")])]),t("li",[t("a",{attrs:{href:"#assetcache-content-caching-unavailable-in-virtual-machine"}},[e._v("AssetCache Content Caching unavailable in virtual machine")])]),t("li",[t("a",{attrs:{href:"#coffee-lake-systems-failing-to-wake"}},[e._v("Coffee Lake systems failing to wake")])]),t("li",[t("a",{attrs:{href:"#no-brightness-control-on-dual-gpu-laptops"}},[e._v("No brightness control on Dual GPU laptops")])]),t("li",[t("a",{attrs:{href:"#no-temperature-fan-sensor-output"}},[e._v("No temperature/fan sensor output")])]),t("li",[t("a",{attrs:{href:"#you-can-t-change-the-startup-disk-to-the-selected-disk-error"}},[e._v('"You can\'t change the startup disk to the selected disk" error')])]),t("li",[t("a",{attrs:{href:"#selecting-startup-disk-doesn-t-apply-correctly"}},[e._v("Selecting Startup Disk doesn't apply correctly")])]),t("li",[t("a",{attrs:{href:"#macos-waking-up-with-the-wrong-time"}},[e._v("macOS waking up with the wrong time")])]),t("li",[t("a",{attrs:{href:"#no-volume-brightness-control-on-external-monitors"}},[e._v("No Volume/Brightness control on external monitors")])]),t("li",[t("a",{attrs:{href:"#time-inconsistency-between-macos-and-windows"}},[e._v("Time inconsistency between macOS and Windows")])]),t("li",[t("a",{attrs:{href:"#disabling-sip"}},[e._v("Disabling SIP")])]),t("li",[t("a",{attrs:{href:"#writing-to-the-macos-system-partition"}},[e._v("Writing to the macOS system partition")])]),t("li",[t("a",{attrs:{href:"#rolling-back-apfs-snapshots"}},[e._v("Rolling back APFS Snapshots")])]),t("li",[t("a",{attrs:{href:"#apple-watch-unlock-issues"}},[e._v("Apple Watch Unlock issues")])]),t("li",[t("a",{attrs:{href:"#_4k-igpu-output-issues-over-hdmi"}},[e._v("4K iGPU output issues over HDMI")])])])]),t("p"),e._v(" "),t("h2",{attrs:{id:"broken-imessage-and-siri"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#broken-imessage-and-siri"}},[e._v("#")]),e._v(" Broken iMessage and Siri")]),e._v(" "),t("p",[e._v("Refer to "),t("a",{attrs:{href:"https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fixing iServices"),t("OutboundLink")],1),e._v(" section")]),e._v(" "),t("h2",{attrs:{id:"no-on-board-audio"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#no-on-board-audio"}},[e._v("#")]),e._v(" No on-board audio")]),e._v(" "),t("p",[e._v("Refer to "),t("a",{attrs:{href:"https://dortania.github.io/OpenCore-Post-Install/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fixing Audio with AppleALC"),t("OutboundLink")],1),e._v(" section")]),e._v(" "),t("h2",{attrs:{id:"bios-reset-or-sent-into-safemode-after-reboot-shutdown"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bios-reset-or-sent-into-safemode-after-reboot-shutdown"}},[e._v("#")]),e._v(" BIOS reset or sent into Safemode after reboot/shutdown")]),e._v(" "),t("p",[e._v("Refer to "),t("a",{attrs:{href:"https://dortania.github.io/OpenCore-Post-Install/misc/rtc.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fixing RTC/CMOS Resets"),t("OutboundLink")],1),e._v(" section")]),e._v(" "),t("h2",{attrs:{id:"synaptics-ps2-based-trackpad-doesn-t-work"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#synaptics-ps2-based-trackpad-doesn-t-work"}},[e._v("#")]),e._v(" Synaptics PS2 based trackpad doesn't work")]),e._v(" "),t("p",[e._v("You can try to use "),t("a",{attrs:{href:"https://github.com/acidanthera/VoodooPS2/blob/master/Docs/ACPI/SSDT-Enable_DynamicEWMode.dsl",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSDT-Enable_DynamicEWMode.dsl"),t("OutboundLink")],1),e._v(".\nFirst, you have to open Device Manager, and head to the following:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Device Manager -> Mice and other pointing devices -> Double click on your trackpad -> Properties -> Details > BIOS device name\n")])])]),t("p",[e._v("Then grab "),t("a",{attrs:{href:"https://github.com/acidanthera/VoodooPS2/blob/master/Docs/ACPI/SSDT-Enable_DynamicEWMode.dsl",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSDT-Enable_DynamicEWMode.dsl"),t("OutboundLink")],1),e._v("\nBy default, this uses PCI0.LPCB.PS2K for the pathing. you'll want to rename accordingly.")]),e._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("External")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("_SB_"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PCI0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("LPCB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PS2K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" DeviceObj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" Rename this\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("_SB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PCI0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("LPCB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PS2K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("RMCF"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Package")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" Rename this\n\n")])])]),t("p",[e._v("Then compile with MaciASL, copy to your OC/ACPI folder, and add it to your config, and you should be good to go.")]),e._v(" "),t("ul",[t("li",[e._v("Note: Although this will work for most cases, the trackpad may be laggy and you may not be able to use the physical buttons ("),t("a",{attrs:{href:"https://github.com/acidanthera/bugtracker/issues/890",target:"_blank",rel:"noopener noreferrer"}},[e._v("more details"),t("OutboundLink")],1),e._v("). If you can live without the trackpad, this may be better:")])]),e._v(" "),t("p",[e._v("Find the ACPI path of your mouse (see above), then grab "),t("a",{attrs:{href:"https://github.com/acidanthera/VoodooPS2/blob/master/Docs/ACPI/SSDT-DisableTrackpadProbe.dsl",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSDT-DisableTrackpadProbe.dsl"),t("OutboundLink")],1),e._v(". By default, this uses PCI0.LPCB.PS2K so you have to change that to your ACPI path if necessary:")]),e._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("External")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("_SB_"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PCI0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("LPCB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PS2K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" DeviceObj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" Rename this\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("_SB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PCI0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("LPCB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PS2K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("RMCF"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Package")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" Rename this\n")])])]),t("h2",{attrs:{id:"fix-for-dell-breakless-ps2-keyboard-keys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fix-for-dell-breakless-ps2-keyboard-keys"}},[e._v("#")]),e._v(" Fix for Dell breakless PS2 keyboard keys")]),e._v(" "),t("p",[e._v("For those with issues surrounding key presses not releasing(ie. pressing infinitely), you'll want to enable VoodooPS2's Dell profile.")]),e._v(" "),t("p",[e._v("First of all, you need to find the path to your ACPI keyboard object in the Device Manager:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Device Manager -> Keyboards -> Double click on your keyboard -> Properties -> Details > BIOS device name\n")])])]),t("p",[e._v("After this, grab "),t("a",{attrs:{href:"https://github.com/acidanthera/VoodooPS2/blob/master/Docs/ACPI/SSDT-KEY-DELL-WN09.dsl",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSDT-KEY-DELL-WN09.dsl"),t("OutboundLink")],1),e._v(" and change the ACPI path to the one found above as needed:")]),e._v(" "),t("div",{staticClass:"language-c extra-class"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("External")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("_SB_"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PCI0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("LPCB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PS2K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" DeviceObj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" Rename this\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Method")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("_SB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PCI0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("LPCB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("PS2K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("_DSM"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" Rename this\n")])])]),t("h2",{attrs:{id:"macos-gpu-acceleration-missing-on-amd-x570"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#macos-gpu-acceleration-missing-on-amd-x570"}},[e._v("#")]),e._v(" macOS GPU acceleration missing on AMD X570")]),e._v(" "),t("p",[e._v("Verify the following:")]),e._v(" "),t("ul",[t("li",[e._v("GPU is UEFI capable(GTX 7XX/2013+)")]),e._v(" "),t("li",[e._v("CSM is off in the BIOS")]),e._v(" "),t("li",[e._v("Forcing PCIe 3.0 link speed")])]),e._v(" "),t("h2",{attrs:{id:"drm-broken"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#drm-broken"}},[e._v("#")]),e._v(" DRM Broken")]),e._v(" "),t("p",[e._v("Refer to "),t("a",{attrs:{href:"https://dortania.github.io/OpenCore-Post-Install/universal/drm.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fixing DRM"),t("OutboundLink")],1),e._v(" section")]),e._v(" "),t("h2",{attrs:{id:"memory-modules-misconfigured-on-macpro7-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memory-modules-misconfigured-on-macpro7-1"}},[e._v("#")]),e._v(' "Memory Modules Misconfigured" on MacPro7,1')]),e._v(" "),t("p",[e._v("Follow guide listed here:")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://dortania.github.io/OpenCore-Post-Install/universal/memory.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fixing MacPro7,1 Memory Errors"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("For those who simply want to disable the notification(not the error itself) is more than enough. For these users, we recommend installing "),t("a",{attrs:{href:"https://github.com/acidanthera/RestrictEvents/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("RestrictEvents"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"apps-crashing-on-amd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apps-crashing-on-amd"}},[e._v("#")]),e._v(" Apps crashing on AMD")]),e._v(" "),t("p",[t("s",[e._v("Easy fix, buy Intel")])]),e._v(" "),t("p",[e._v('So with AMD, whenever Apple calls CPU specific functions the app will either not work or outright crash. Here are some apps and their "fixes":')]),e._v(" "),t("ul",[t("li",[e._v("Adobe Products don't always work\n"),t("ul",[t("li",[e._v("Some fixes can be found here: "),t("a",{attrs:{href:"https://adobe.amd-osx.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Adobe Fixes"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("Do note these fixes just disables functionality, they're not really fixes")])])]),e._v(" "),t("li",[e._v("Virtual Machine running off of AppleHV's framework will not work(ie: Parallels 15, VMware)\n"),t("ul",[t("li",[e._v("VirtualBox works fine as it doesn't use AppleHV")]),e._v(" "),t("li",[e._v("VMware 10 and older can work as well")]),e._v(" "),t("li",[e._v("Parallels 13.1.0 and older are known to work as well")])])]),e._v(" "),t("li",[e._v("Docker broken\n"),t("ul",[t("li",[e._v("Docker toolbox is the only solution as it's based off of VirtualBox, many features are unavailable with this version")])])]),e._v(" "),t("li",[e._v("IDA Pro won't install\n"),t("ul",[t("li",[e._v("There's an Intel specific check in the installer, app itself is likely fine")])])]),e._v(" "),t("li",[e._v("15/16h CPU web pages crashing\n"),t("ul",[t("li",[e._v("Follow directions here after UPDATE 5: "),t("a",{attrs:{href:"https://www.insanelymac.com/forum/topic/335877-amd-mojave-kernel-development-and-testing/?do=findComment&comment=2661857",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fix web pages"),t("OutboundLink")],1)])])])]),e._v(" "),t("h2",{attrs:{id:"sleep-crashing-on-amd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sleep-crashing-on-amd"}},[e._v("#")]),e._v(" Sleep crashing on AMD")]),e._v(" "),t("p",[e._v("This is generally seen on AMD who use the chipset's USB controller, specifically for the Ryzen series and newer. The main way to tell if you're having issues with this is checking logs after either sleeping or waking:")]),e._v(" "),t("ul",[t("li",[e._v("In terminal:\n"),t("ul",[t("li",[t("code",[e._v('log show --last 1d | grep -i "Wake reason"')])])])])]),e._v(" "),t("p",[e._v("Should result in something like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Sleep transition timed out after 180 seconds while calling power state change callbacks. Suspected bundle: com.apple.iokit.IOUSBHostFamily.\n")])])]),t("p",[e._v("You can double check which controller is XHC0 via IOReg and checking the Vendor ID(1022 for AMD chipset). The fix for this sleep issue is either:")]),e._v(" "),t("ul",[t("li",[e._v("Avoid the chipset USB all together(ideally set "),t("code",[e._v("_STA = 0x0")]),e._v(" to disable the controller outright with an SSDT)")]),e._v(" "),t("li",[e._v("Correct the USBX power properties to what the controller expects")])]),e._v(" "),t("h2",{attrs:{id:"assetcache-content-caching-unavailable-in-virtual-machine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assetcache-content-caching-unavailable-in-virtual-machine"}},[e._v("#")]),e._v(" AssetCache Content Caching unavailable in virtual machine")]),e._v(" "),t("p",[e._v("Errors such as:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" AssetCacheManagerUtil activate\nAssetCacheManagerUtil"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" Failed to activate content caching: Error "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("Domain")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("ACSMErrorDomain "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("Code")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"virtual machine"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n")])])]),t("p",[e._v("arise due to "),t("code",[e._v("VMM")]),e._v(" flag being exposed by sysctl.")]),e._v(" "),t("p",[e._v("Apply "),t("a",{attrs:{href:"https://github.com/ofawx/VmAssetCacheEnable",target:"_blank",rel:"noopener noreferrer"}},[e._v("VmAssetCacheEnable"),t("OutboundLink")],1),e._v(" kernel patch to disguise the flag and allow normal operation.")]),e._v(" "),t("h2",{attrs:{id:"coffee-lake-systems-failing-to-wake"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#coffee-lake-systems-failing-to-wake"}},[e._v("#")]),e._v(" Coffee Lake systems failing to wake")]),e._v(" "),t("p",[e._v("In macOS 10.15.4, there were some changes made to AGPM that can cause wake issues on Coffee Lake systems. Specifically displays hooked up to the iGPU would fail to wake. To resolve this:")]),e._v(" "),t("ul",[t("li",[e._v("Add "),t("code",[e._v("igfxonln=1")]),e._v(" to boot-args")]),e._v(" "),t("li",[e._v("Make sure you're using "),t("a",{attrs:{href:"https://github.com/acidanthera/WhateverGreen/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("WhateverGreen v1.3.8"),t("OutboundLink")],1),e._v(" or newer")])]),e._v(" "),t("h2",{attrs:{id:"no-brightness-control-on-dual-gpu-laptops"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#no-brightness-control-on-dual-gpu-laptops"}},[e._v("#")]),e._v(" No brightness control on Dual GPU laptops")]),e._v(" "),t("p",[e._v("In macOS 11.3, there were some changes made to backlight controlling mechanisms that defaults the backlight to be controlled by the dGPU on Dual GPU laptops with MUX enabled. Optimus only laptops, however, are not affected, since you need to disable the dGPU anyways. Specifically, this problem only causes issues if you have a Dual GPU laptop with the internal screen from an iGPU output and external screens from dGPU outputs ("),t("code",[e._v("Hybrid Mode")]),e._v(" on some Mobile Workstations). To resolve this, you may disable either the iGPU or the dGPU, or do the following:")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Verify SSDT-PNLF is installed(ie. EFI/OC/ACPI as well as config.plist -> ACPI -> Add)")])]),e._v(" "),t("li",[t("p",[e._v("Add below to "),t("code",[e._v("PciRoot(0x0)/Pci(0x2,0x0)")]),e._v(":")])])]),e._v(" "),t("p",[t("code",[e._v("@0,backlight-control | Data | 01000000")])]),e._v(" "),t("p",[t("code",[e._v("applbkl | Data | 01000000")])]),e._v(" "),t("p",[t("code",[e._v("AAPL,backlight-control | Data | 01000000")])]),e._v(" "),t("p",[t("code",[e._v("AAPL00,backlight-control | Data | 01000000")])]),e._v(" "),t("ul",[t("li",[e._v("Add below to your dGPU PCI address:")])]),e._v(" "),t("p",[t("code",[e._v("@0,backlight-control | Data | 00000000")])]),e._v(" "),t("p",[t("code",[e._v("applbkl | Data | 00000000")])]),e._v(" "),t("p",[t("code",[e._v("AAPL,backlight-control | Data | 00000000")])]),e._v(" "),t("h2",{attrs:{id:"no-temperature-fan-sensor-output"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#no-temperature-fan-sensor-output"}},[e._v("#")]),e._v(" No temperature/fan sensor output")]),e._v(" "),t("p",[e._v("So couple things:")]),e._v(" "),t("ul",[t("li",[e._v("iStat Menus doesn't yet support MacPro7,1 readouts")]),e._v(" "),t("li",[e._v("VirtualSMC's bundled sensors do not support AMD")])]),e._v(" "),t("p",[e._v("For iStat, you'll have to wait for an update. For AMD users, you can use either:")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/trulyspinach/SMCAMDProcessor/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("SMCAMDProcessor"),t("OutboundLink")],1),e._v(" "),t("ul",[t("li",[e._v("Still in early beta but great work has been done, note it's been mainly tested on Ryzen")])])]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/CloverHackyColor/FakeSMC3_with_plugins/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("FakeSMC3_with_plugins"),t("OutboundLink")],1)])]),e._v(" "),t("p",[t("strong",[e._v("Note for AMD with FakeSMC")]),e._v(":")]),e._v(" "),t("ul",[t("li",[e._v("FileVault support requires more work with FakeSMC")]),e._v(" "),t("li",[e._v("Make sure no other SMC kexts are present, specifically those from "),t("a",{attrs:{href:"https://github.com/acidanthera/VirtualSMC/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("VirtualSMC"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"you-can-t-change-the-startup-disk-to-the-selected-disk-error"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#you-can-t-change-the-startup-disk-to-the-selected-disk-error"}},[e._v("#")]),e._v(' "You can\'t change the startup disk to the selected disk" error')]),e._v(" "),t("p",[e._v("This is commonly caused by irregular partition setup of the Windows drive, specifically that the EFI is not the first partition. To fix this, we need to enable this quirk:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("PlatformInfo -> Generic -> AdviseFeatures -> True")])])]),e._v(" "),t("p",[t("img",{attrs:{src:a(495),alt:""}})]),e._v(" "),t("h2",{attrs:{id:"selecting-startup-disk-doesn-t-apply-correctly"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#selecting-startup-disk-doesn-t-apply-correctly"}},[e._v("#")]),e._v(" Selecting Startup Disk doesn't apply correctly")]),e._v(" "),t("p",[e._v("If you're having issues with Startup Disk correctly applying your new boot entry, this is most likely caused by a missing "),t("code",[e._v("DevicePathsSupported")]),e._v(" in your I/O Registry. To resolve this, ensure you are using "),t("code",[e._v("PlatformInfo -> Automatic -> True")])]),e._v(" "),t("p",[e._v("Example of missing "),t("code",[e._v("DevicePathsSupported")]),e._v(":")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/acidanthera/bugtracker/issues/664#issuecomment-663873846",target:"_blank",rel:"noopener noreferrer"}},[e._v("Default DevicePath match failure due to different PciRoot #664"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"macos-waking-up-with-the-wrong-time"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#macos-waking-up-with-the-wrong-time"}},[e._v("#")]),e._v(" macOS waking up with the wrong time")]),e._v(" "),t("p",[e._v("An odd quirk some people may notice is that from wake, macOS will have the incorrect time for a bit before self-correcting with network time check. The root cause of this issue is most likely due to your RTC not ticking, and can be resolved with a new CMOS battery(note that Z270 and newer are quite picky with voltage so choose carefully).")]),e._v(" "),t("p",[e._v("To verify whether your RTC is working correctly:")]),e._v(" "),t("ul",[t("li",[e._v("Download "),t("a",{attrs:{href:"https://github.com/acidanthera/virtualsmc/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("VirtualSMC v1.1.5+"),t("OutboundLink")],1),e._v(" and run the smcread tool:")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("/path/to/smcread "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-s")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" CLKT\n")])])]),t("p",[t("img",{attrs:{src:a(496),alt:""}})]),e._v(" "),t("p",[e._v("This should provide you with a hexadecimal value, and once converted it should equal time elapsed from Midnight relative to Cupertino.")]),e._v(" "),t("p",[e._v("So for this example, we'll grab our value("),t("code",[e._v("00010D13")]),e._v(") then convert it to decimal and finally divide it by 3600. This should result in the approximate time elapsed(in seconds) since midnight relative to Cupertino")]),e._v(" "),t("ul",[t("li",[e._v("00010D13 (Convert to HEX)-> 68883 (Divided by 3600 so we get hours)-> 19.13h(so 19:07:48)")])]),e._v(" "),t("p",[e._v("Next you'll want to put your hack to sleep for a bit and wake it, then check the CLKT value once more to see whether it deviated more or if it has a set difference. If you find it didn't actually tick much of at all from the elapsed time, you'll need to look into buying a new battery(with proper voltage)")]),e._v(" "),t("h2",{attrs:{id:"no-volume-brightness-control-on-external-monitors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#no-volume-brightness-control-on-external-monitors"}},[e._v("#")]),e._v(" No Volume/Brightness control on external monitors")]),e._v(" "),t("p",[e._v("Oddly enough, macOS has locked down digital audio from having control. To bring back some functionality, the app "),t("a",{attrs:{href:"https://github.com/the0neyouseek/MonitorControl/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("MonitorControl"),t("OutboundLink")],1),e._v(" has done great work on improving support in macOS")]),e._v(" "),t("h2",{attrs:{id:"time-inconsistency-between-macos-and-windows"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#time-inconsistency-between-macos-and-windows"}},[e._v("#")]),e._v(" Time inconsistency between macOS and Windows")]),e._v(" "),t("p",[e._v("This is due to macOS using Universal Time while Windows relies on Greenwich time, so you'll need to force one OS to a different way of measuring time. We highly recommend modifying Windows instead as it's far less destructive and painful:")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://dortania.github.io/OpenCore-Post-Install/multiboot/bootcamp.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Install Bootcamp utilities"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://superuser.com/q/494432",target:"_blank",rel:"noopener noreferrer"}},[e._v("Modify Windows' registry"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"disabling-sip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#disabling-sip"}},[e._v("#")]),e._v(" Disabling SIP")]),e._v(" "),t("p",[e._v("SIP or more properly known as System Integrity Protection, is a security technology that attempts to prevent any malicious software and the end user from damaging the OS. First introduced with OS X El Capitan, SIP has grown over time to control more and more things in macOS, including limiting edits to restricted file locations and 3rd party kext loading with "),t("code",[e._v("kextload")]),e._v("(OpenCore is unaffected as kexts are injected at boot). To resolve this, Apple has provided numerous configuration options in the NVRAM variable "),t("code",[e._v("csr-active-config")]),e._v(" which can either be set in the macOS recovery environment or with OpenCore's NVRAM section(The latter will be discussed below).")]),e._v(" "),t("ul",[t("li",[t("span",{staticStyle:{color:"red"}},[e._v("WARNING:")]),e._v(" Disabling SIP can break OS functionality such as software updates in macOS 11, Big Sur and newer. Please be careful to only disable specific SIP values instead of disabling SIP outright to avoid these issues.\n"),t("ul",[t("li",[e._v("Enabling "),t("code",[e._v("CSR_ALLOW_UNAUTHENTICATED_ROOT")]),e._v(" and "),t("code",[e._v("CSR_ALLOW_APPLE_INTERNAL")]),e._v(" are common options that can break OS updates for users")])])])]),e._v(" "),t("p",[e._v("You can choose different values to enable or disable certain flags of SIP. Some useful tools to help you with these are "),t("a",{attrs:{href:"https://github.com/corpnewt/BitmaskDecode",target:"_blank",rel:"noopener noreferrer"}},[e._v("BitmaskDecode"),t("OutboundLink")],1),e._v(" and "),t("a",{attrs:{href:"https://github.com/JayBrown/csrstat-NG",target:"_blank",rel:"noopener noreferrer"}},[e._v("csrstat"),t("OutboundLink")],1),e._v(". Common values are as follows (bytes are pre-hex swapped for you, and note that they go under NVRAM -> Add -> 7C436110-AB2A-4BBB-A880-FE41995C9F82 -> csr-active-config):")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("00000000")]),e._v(" - SIP completely enabled (0x0).")]),e._v(" "),t("li",[t("code",[e._v("03000000")]),e._v(" - Disable kext signing (0x1) and filesystem protections (0x2).")]),e._v(" "),t("li",[t("code",[e._v("FF030000")]),e._v(" - Disable all "),t("a",{attrs:{href:"https://opensource.apple.com/source/xnu/xnu-4570.71.2/bsd/sys/csr.h.auto.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("flags in macOS High Sierra"),t("OutboundLink")],1),e._v(" (0x3ff).")]),e._v(" "),t("li",[t("code",[e._v("FF070000")]),e._v(" - Disable all "),t("a",{attrs:{href:"https://opensource.apple.com/source/xnu/xnu-4903.270.47/bsd/sys/csr.h.auto.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("flags in macOS Mojave"),t("OutboundLink")],1),e._v(" and in "),t("a",{attrs:{href:"https://opensource.apple.com/source/xnu/xnu-6153.81.5/bsd/sys/csr.h.auto.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("macOS Catalina"),t("OutboundLink")],1),e._v(" (0x7ff) as Apple introduced a value for executable policy.")]),e._v(" "),t("li",[t("code",[e._v("FF0F0000")]),e._v(" - Disable all flags in macOS Big Sur (0xfff) which has another new "),t("a",{attrs:{href:"https://eclecticlight.co/2020/06/25/big-surs-signed-system-volume-added-security-protection/",target:"_blank",rel:"noopener noreferrer"}},[e._v("flag for authenticated root"),t("OutboundLink")],1),e._v(".")])]),e._v(" "),t("p",[t("strong",[e._v("Note")]),e._v(": Disabling SIP with OpenCore is quite a bit different compared to Clover, specifically that NVRAM variables will not be overwritten unless explicitly told so under the "),t("code",[e._v("Delete")]),e._v(" section. So if you've already set SIP once either via OpenCore or in macOS, you must override the variable:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("NVRAM -> Delete -> 7C436110-AB2A-4BBB-A880-FE41995C9F82 -> csr-active-config")])])]),e._v(" "),t("p",[t("img",{attrs:{src:a(497),alt:""}})]),e._v(" "),t("h2",{attrs:{id:"writing-to-the-macos-system-partition"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#writing-to-the-macos-system-partition"}},[e._v("#")]),e._v(" Writing to the macOS system partition")]),e._v(" "),t("p",[e._v("With macOS Catalina and newer, Apple split the OS and user data into 2 volumes where the system volume is read-only by default. To make these drives writable we'll need to do a few things:")]),e._v(" "),t("ul",[t("li",[e._v("Note: Users of "),t("code",[e._v("SecureBootModel")]),e._v(" may end up in a RecoveryOS boot loop if the system partition has been modified. To resolve this, Reset NVRAM and set "),t("code",[e._v("SecureBootModel")]),e._v(" to "),t("code",[e._v("Disabled")])])]),e._v(" "),t("p",[t("strong",[e._v("macOS Catalina")])]),e._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"#disabling-sip"}},[e._v("Disable SIP")])]),e._v(" "),t("li",[e._v("Mount drive as writable (Run "),t("code",[e._v("sudo mount -uw /")]),e._v(" in terminal)")])]),e._v(" "),t("p",[t("strong",[e._v("macOS Big Sur")])]),e._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"#disabling-sip"}},[e._v("Disable SIP")])]),e._v(" "),t("li",[e._v("Mount drive as writable (See below link for command)")])]),e._v(" "),t("ul",[t("li",[e._v("Note: Due to how OS updates work in macOS Big Sur and newer, changing the system volume can in fact break OS updates. Please edit with caution")])]),e._v(" "),t("p",[e._v("Commands based off of Apple's KDK documents:")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# First, create a mount point for your drive")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" ~/livemount\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Next, find your System volume")]),e._v("\ndiskutil list\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# From the below list, we can see our System volume is disk5s5")]),e._v("\n/dev/disk5 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("synthesized"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(":\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#:                       TYPE NAME                    SIZE       IDENTIFIER")]),e._v("\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(":      APFS Container Scheme -                      +255.7 GB   disk5\n                                 Physical Store disk4s2\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(":                APFS Volume ⁨Big Sur HD - Data⁩       "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("122.5")]),e._v(" GB   disk5s1\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(":                APFS Volume ⁨Preboot⁩                 "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("309.4")]),e._v(" MB   disk5s2\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(":                APFS Volume ⁨Recovery⁩                "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("887.8")]),e._v(" MB   disk5s3\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v(":                APFS Volume ⁨VM⁩                      "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.1")]),e._v(" MB     disk5s4\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v(":                APFS Volume ⁨Big Sur HD⁩              "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("16.2")]),e._v(" GB    disk5s5\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),e._v(":              APFS Snapshot ⁨com.apple.os.update-"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".⁩ "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("16.2")]),e._v(" GB    disk5s5s\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Mount the drive(ie. disk5s5)")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mount")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-o")]),e._v(" nobrowse "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-t")]),e._v(" apfs  /dev/disk5s5 ~/livemount\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Now you can freely make any edits to the System volume")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# If you edited either the S*/L*/Kernel, S*/L*/Extensions or L*/Extensions,")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# you will need to rebuild the kernel cache")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" kmutil "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" --volume-root ~/livemount --update-all\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Finally, once done editing the system volume we'll want to create a new snapshot")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" bless "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--folder")]),e._v(" ~/livemount/System/Library/CoreServices "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--bootefi")]),e._v(" --create-snapshot\n")])])]),t("h2",{attrs:{id:"rolling-back-apfs-snapshots"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rolling-back-apfs-snapshots"}},[e._v("#")]),e._v(" Rolling back APFS Snapshots")]),e._v(" "),t("p",[e._v("With macOS Big Sur, the system volume is now snapshotted allowing you to roll back in case of issues with system updates breaking due to a broken seal. Thanks to new snapshots being created with every OS update, we've got quite a bit to roll back too.")]),e._v(" "),t("p",[e._v('To roll back, you\'ll first need to reboot into Recovery partition then select "Restore From Time Machine Backup":')]),e._v(" "),t("p",[t("img",{attrs:{src:a(498),alt:""}})]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.lifewire.com/roll-back-apfs-snapshots-4154969",target:"_blank",rel:"noopener noreferrer"}},[e._v("Credit to Lifewire for image"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"apple-watch-unlock-issues"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apple-watch-unlock-issues"}},[e._v("#")]),e._v(" Apple Watch Unlock issues")]),e._v(" "),t("p",[e._v("For those with Apple Watch Unlock issues, verify the following:")]),e._v(" "),t("ul",[t("li",[e._v("You have a supported Apple Wireless card with Bluetooth Low Energy(4.0+)")]),e._v(" "),t("li",[e._v("Your watch and Mac are signed in with the same account")]),e._v(" "),t("li",[e._v("iServices working correctly(ie. iMessage)")]),e._v(" "),t("li",[e._v("There's an option to Unlock with Apple Watch under Security and Privacy setting in System Preferences")])]),e._v(" "),t("p",[t("img",{attrs:{src:a(499),alt:""}})]),e._v(" "),t("p",[e._v("If the above are met, and you still have unlock issues we recommend running through the below guide:")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://forums.macrumors.com/threads/watchos-7-beta-5-unlock-mac-doesnt-work.2250819/page-2?post=28904426#post-28904426",target:"_blank",rel:"noopener noreferrer"}},[e._v("Fixing Auto Unlock"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"_4k-igpu-output-issues-over-hdmi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4k-igpu-output-issues-over-hdmi"}},[e._v("#")]),e._v(" 4K iGPU output issues over HDMI")]),e._v(" "),t("p",[e._v("For machines with HDMI 2.0 capable ports with resolution issues, verify the following:")]),e._v(" "),t("ul",[t("li",[e._v("4k output works correctly in Windows")]),e._v(" "),t("li",[e._v("Monitor is set explicitly to HDMI 2.0\n"),t("ul",[t("li",[e._v("If using an HDMI to DisplayPort converter, ensure the monitor is set to DisplayPort 1.2 or higher")])])]),e._v(" "),t("li",[e._v("Ensure enough iGPU memory has been allocated\n"),t("ul",[t("li",[e._v("For Broadwell and newer, 64MB is expected to be allocated")]),e._v(" "),t("li",[e._v("Machines relying on WhateverGreen's "),t("code",[e._v("framebuffer-stolenmem")]),e._v(" property should know this can cause 4k output issues. Please ensure you can set the iGPU's memory to 64MB allowing you to remove these properties")])])]),e._v(" "),t("li",[e._v("Laptops and many desktop users may need this boot-arg:\n"),t("ul",[t("li",[t("code",[e._v("-cdfon")])])])])]),e._v(" "),t("p",[e._v("For all other troubleshooting, please reference "),t("a",{attrs:{href:"https://github.com/acidanthera/WhateverGreen/blob/master/Manual/FAQ.IntelHD.en.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("WhateverGreen's Intel docs"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=o.exports}}]);